import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Load the datasets
df1 = pd.read_csv("mental-and-substance-use-as-share-of-disease -AI.csv")
df2 = pd.read_csv("prevalence-by-mental-and-substance-use-disorder _AI.csv")

# Combine the two datasets based on the common columns: 'Entity', 'code', and 'year'
merged_df = pd.merge(df1, df2, on=['Entity', 'code', 'year'])

# Split the data into features (X) and the target variable (y)
X = merged_df.drop(columns=['DALYs (Disability-Adjusted Life Years) - Mental disorders - Sex: Both - Age: All Ages (Percent)'])  
y = merged_df['DALYs (Disability-Adjusted Life Years) - Mental disorders - Sex: Both - Age: All Ages (Percent)']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Choose a machine learning algorithm 
model = RandomForestClassifier()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Evaluate the model's performance
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
